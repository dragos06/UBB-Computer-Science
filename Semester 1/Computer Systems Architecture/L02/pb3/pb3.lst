     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 3601                        a dw 310
    15 00000002 2201                        b dw 290
    16 00000004 2E01                        c dw 302
    17 00000006 0E01                        d dw 270
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22 00000000 66A1[06000000]                  mov ax, word [d]; AL = d
    23 00000006 668B1D[00000000]                mov bx, word [a]; BL = a
    24 0000000D 66031D[02000000]                add bx, word [b]; BL = a + b
    25 00000014 668B0D[04000000]                mov cx, word [c]; CL = c
    26 0000001B 66030D[04000000]                add cx, word [c]; CL = c + c
    27 00000022 6629D8                          sub ax, bx; AL = d - (a + b)
    28 00000025 6629C8                          sub ax, cx; AL = d - (a + b) - (c + c)
    29                                          ; exit(0)
    30 00000028 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    31 0000002A FF15[00000000]                  call    [exit]       ; call exit to terminate the program
