     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 08                          a db 8
    15 00000001 0C                          b db 12
    16 00000002 03                          c db 3
    17 00000003 0A                          d db 10
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22 00000000 B002                            mov al, 2; AL = 2
    23 00000002 8A1D[02000000]                  mov bl, byte [c]; BL = c
    24 00000008 021D[03000000]                  add bl, byte [d]; BL = c + d
    25 0000000E 8A0D[00000000]                  mov cl, byte [a]; CL = a
    26 00000014 020D[01000000]                  add cl, byte [b]; CL = a + b
    27 0000001A 2A0D[02000000]                  sub cl, byte [c]; CL = a + b - c
    28 00000020 28D8                            sub al, bl; AL = 2 - (c + d)
    29 00000022 00C8                            add al, cl; AL = 2 - (c + d) + (a + b - c)
    30                                          ; exit(0)
    31 00000024 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    32 00000026 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
