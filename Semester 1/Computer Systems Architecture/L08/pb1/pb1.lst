     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf, scanf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import printf msvcrt.dll
    10                                  import scanf msvcrt.dll
    11                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15 00000000 <res 00000004>              a resd 1
    16 00000004 61203D2000                  scanprint db "a = ", 0
    17 00000009 256400                      scanformat db "%d", 0
    18                                      ;a dd -854
    19 0000000C 61203D202564202862-         printformat db "a = %d (base 10), a = %x (base 16)", 0
    19 00000015 617365203130292C20-
    19 0000001E 61203D202578202862-
    19 00000027 6173652031362900   
    20                                      ; ...
    21                                  
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ; ...
    26 00000000 68[04000000]                    push dword scanprint
    27 00000005 FF15[00000000]                  call [printf]
    28 0000000B 83C404                          add esp, 4*1
    29 0000000E 68[00000000]                    push dword a
    30 00000013 68[09000000]                    push dword scanformat
    31 00000018 FF15[00000000]                  call [scanf]
    32 0000001E 83C408                          add esp, 4*2
    33 00000021 FF35[00000000]                  push dword [a]
    34 00000027 FF35[00000000]                  push dword [a]
    35 0000002D 68[0C000000]                    push dword printformat
    36 00000032 FF15[00000000]                  call [printf]
    37 00000038 83C40C                          add esp, 4*3
    38                                          ; exit(0)
    39 0000003B 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    40 0000003D FF15[00000000]                  call    [exit]       ; call exit to terminate the program
